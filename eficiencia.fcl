/*
	Example: A growth calculation FIS (fuzzy inference system)
	Calculates growth based on 'dias', 'peso' and 'comprimento'

*/

FUNCTION_BLOCK eficiencia	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	dias : REAL;
	peso : REAL;
	comprimento : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	eficiencia : REAL;
END_VAR

FUZZIFY dias			// Fuzzify input variable 'dias': {'pouco', 'quase' , 'ideal'}
	TERM pouco := (0, 1) (25, 1) (27, 0);
	TERM quase := (25, 0) (27, 1) (39, 1) (41, 0);
	TERM ideal := (39, 0) (41, 1) (47, 1);
END_FUZZIFY

FUZZIFY peso			// Fuzzify input variable 'peso': { 'baixo', 'medio', 'ideal' }
	TERM baixo := (0, 1) (150, 1) (175, 0);
	TERM medio := (150,0) (175,1) (290, 0);
	TERM ideal := (275, 0) (300, 1) (400, 1);
END_FUZZIFY

FUZZIFY comprimento			// Fuzzify input variable 'comprimento': {'rasteira', 'media' , 'ideal' }
	TERM rasteira := (0, 1) (10, 1) (15, 0);
	TERM media := (12, 0) (15, 1) (20, 1) (25, 0);
	TERM ideal := (22, 0) (25, 1) (40, 1);
END_FUZZIFY

DEFUZZIFY eficiencia			// Defuzzify output variable 'eficiencia' : { 'ruim', 'normal', 'excelente' }
	TERM ruim := (0.80, 1) (1.0, 1) (1.2, 0);
	TERM normal := (1.2, 0) (1.4, 1) (1.5, 1) (1.7, 0);
	TERM boa := (1.7, 0) (1.8, 1) (3.0, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' 
						// (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF dias IS pouco AND peso IS baixo AND comprimento IS rasteira THEN eficiencia IS ruim;

END_RULEBLOCK

END_FUNCTION_BLOCK

